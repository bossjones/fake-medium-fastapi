[tool:pytest]
testpaths = tests
timeout = 10
filterwarnings = error
env =
    SECRET_KEY=secret

[coverage:report]
precision = 2
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    raise NotImplemented

[coverage:run]
source = app
branch = True

[mypy]
plugins = pydantic.mypy, sqlmypy

# Enables or disables strict Optional checks. If False, mypy treats None as compatible with every type.
strict_optional = True
# Warns about casting an expression to its inferred type.
warn_redundant_casts = True
# warn_unused_ignores = True
# Disallows usage of generic types that do not specify explicit type parameters.
disallow_any_generics = True
# Type-checks the interior of functions without type annotations.
check_untyped_defs = True

# Disallows defining functions without type annotations or with incomplete type annotations.
disallow_untyped_defs = True
# Suppresses error messages about imports that cannot be resolved.
ignore_missing_imports = True

# mypy_path = stubs

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True

[mypy-loguru]
ignore_missing_imports = True

[mypy-asyncpg.*]
ignore_missing_imports = True

[mypy-bcrypt]
ignore_missing_imports = True

[mypy-passlib.*]
ignore_missing_imports = True

[mypy-slugify.*]
ignore_missing_imports = True

[mypy-pypika.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-alembic.*]
ignore_missing_imports = True

[mypy-docker.*]
ignore_missing_imports = True

[mypy-httpx.*]
# TODO: Fix this, but using it like so for the moment
# https://github.com/encode/httpx/blob/master/setup.cfg
disallow_untyped_defs = True
ignore_missing_imports = True

[mypy-tests.conftest]
# FIXME: Till we fix the following, need to ignore errors.
# tests/conftest.py:88: error: Missing type parameters for generic type "AsyncGenerator"
# tests/conftest.py:102: error: "AsyncGenerator" expects 2 type arguments, but 1 given
# tests/conftest.py:113: error: "AsyncGenerator" expects 2 type arguments, but 1 given
ignore_missing_imports = True
ignore_errors = True

[mypy-tests.testing_helpers]
# FIXME: Till we fix the following, need to ignore errors.
# tests/testing_helpers.py:11: error: Missing type parameters for generic type "Callable"
# tests/testing_helpers.py:12: error: Missing type parameters for generic type "Callable"
ignore_missing_imports = True
ignore_errors = True

[mypy-tests.test_api.test_routes.test_articles]
# FIXME: Till we fix the following, need to ignore errors.
# tests/test_api/test_routes/test_articles.py:105: error: Implicit generic "Any". Use "typing.Dict" and specify generic parameters
ignore_missing_imports = True
ignore_errors = True

# [mypy-sqlalchemy.*]
# ignore_missing_imports = True
#
# [mypy-sqlalchemy_wrapper.*]
# ignore_missing_imports = True

# NOTE: We can disable this when we move to psycopg3
# SOURCE: https://github.com/psycopg/psycopg2/issues/977
[mypy-psycopg2.*]
ignore_missing_imports = True

[isort]
multi_line_output = 3
include_trailing_comma = True
line_length = 88
force_grid_wrap = 0
combine_as_imports = True

[flake8]
format = wemake
max-line-length = 88
per-file-ignores =
    # ignore error on builtin names for TypedTable classes, since just mapper for SQL table
    app/db/queries/tables.py: WPS125,

    # ignore black disabling in some places for queries building using pypika
    app/db/repositories/*.py: E800,
ignore =
    # common errors:
    # FastAPI architecture requires a lot of functions calls as default arguments, so ignore it here.
    B008,
    # docs are missing in this project.
    D, RST

    # WPS: 3xx
    # IMO, but the obligation to specify the base class is redundant.
    WPS306,

    # WPS: 4xx
    # FastAPI architecture requires a lot of complex calls as default arguments, so ignore it here.
    WPS404,
    # again, FastAPI DI architecture involves a lot of nested functions as DI providers.
    WPS430,

    # WPS: 6xx
    # pydantic defines models in dataclasses model style, but not supported by WPS.
    WPS601,
no-accept-encodings = True
nested-classes-whitelist=Config
inline-quotes = "
